version: '3.4'

services:
  su-zookeeper:
    image: confluentinc/cp-zookeeper:7.2.0
    container_name: su-zookeeper
    restart: always
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - hack-network

  su-broker:
    image: confluentinc/cp-kafka:7.2.0
    container_name: su-broker
    restart: always
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - su-zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: su-zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://158.160.98.150:9092,PLAINTEXT_INTERNAL://158.160.98.150:29092
#      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - hack-network

  broker-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - 8080:8080
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: su-broker:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER:  su-zookeeper:2181
      #SERVER_PORT: 8080
      DYNAMIC_CONFIG_ENABLED: true
    networks:
      - hack-network

  machine1:
    build:
      dockerfile: ./sample_processes/Dockerfile
      context: .
    env_file:
      - .env.machine1
    networks:
      - hack-network
    
  machine2:
    build:
      dockerfile: ./sample_processes/Dockerfile
      context: .
    env_file:
      - .env.machine2
    networks:
      - hack-network

  monitor_consumer:
    build:
      dockerfile: ./monitor/Dockerfile
      context: .
    command: python3 app.py
    env_file:
      - .env
    depends_on:
      - broker
    networks:
      - hack-network
    
  monitor_worker:
    build:
      dockerfile: ./monitor/Dockerfile
      context: .
    command: dramatiq tasks
    env_file:
      - .env
    depends_on:
      - broker
    networks:
      - hack-network

  broker:
    image: rabbitmq:3.8-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=${BROKER_USER}
      - RABBITMQ_DEFAULT_PASS=${BROKER_PASS}
    restart: unless-stopped
    networks:
      - hack-network

  opensearch:
    image: opensearchproject/opensearch:latest
    container_name: opensearch
    environment:
      - discovery.type=single-node
      - plugins.security.ssl.http.enabled=false
      - "OPENSEARCH_JAVA_OPTS=-Xms2048m -Xmx2048m" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
        hard: 65536
    volumes:
      - opensearch-data:/usr/share/opensearch/data
      - ./config/config.yml:/usr/share/opensearch/plugins/opensearch-security/securityconfig/config.yml
      - ./config/internal_users.yml:/usr/share/opensearch/plugins/opensearch-security/securityconfig/internal_users.yml
      - ./config/roles_mapping.yml:/usr/share/opensearch/plugins/opensearch-security/securityconfig/roles_mapping.yml
    ports:
      - 9200:9200
      - 9600:9600 # required for Performance Analyzer
    networks:
      - hack-network

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    container_name: opensearch-dashboards
    ports:
      - 5601:5601
    expose:
      - "5601"
    environment:
      OPENSEARCH_HOSTS: '["http://158.160.98.150:9200"]'
    networks:
      - hack-network

  logstash:
    image: opensearchproject/logstash-oss-with-opensearch-output-plugin:latest
    container_name: logstash
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5044:5044"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - opensearch
    networks:
      - hack-network

  sensors:
    image: sensors
    build:
      context: .
      dockerfile: ./Dockerfile.sensors
    ports:
      - "6068:6068"
    networks:
      - hack-network

  scada:
    image: scada
    build:
      context: .
      dockerfile: ./Dockerfile.scada
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    volumes:
      - ./storage/:/storage
    ports:
      - "6069:6069"   
    networks:
      - hack-network

  # plc:
  #   image: plc
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile.plc
  #   volumes:
  #     - ./storage/:/storage
  #   ports:
  #     - "6064:6064"
      # networks:
      # - hack-network

  license_server:
    image: license_server
    build:
      context: .
      dockerfile: ./Dockerfile.license_server
    ports:
      - "6067:6067"
    networks:
      - hack-network

volumes:
  opensearch-data:
    driver: local
    driver_opts:
       o: bind
       type: none
       device: /opt/data/app/opensearch/storage/opensearch-data

networks:
  hack-network:    
    ipam:
      config:
        - subnet: 192.168.0.0/24